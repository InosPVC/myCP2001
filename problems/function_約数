// enumdiv(int n)  =  nの約数の配列を返す = nが約数いくつ？
vector<int> enumdiv(int n) { 
    vector<int> S;
    for (int i = 1; 1LL*i*i <= n; i++) if (n%i == 0) { S.push_back(i); if (i*i != n) S.push_back(n / i); }
    sort(S.begin(), S.end());
    return S;
}

//nが8個の約数をもち　かつ　奇数である。
rep(i, 1, N + 1) if (i % 2 == 1) {
        auto ed = enumdiv(i);
        if (ed.size() == 8) ans++; //約数が8個なら、1を追加
    }

// gcd
int gcd(int x, int y) {
    int m = min(x, y);
    for(int d=m; d>0; d--) {
        if(x % d == 0 && y % d == 0) {
            return d;
        }
    }
}

// lcm
int n1 , n2 ,max ;
cin >> n1 >> n2;
    
    // maximum value between n1 and n2 is stored in max
    max = (n1 > n2) ? n1 : n2;

    do
    {
        if (max % n1 == 0 && max % n2 == 0)
        {
            cout << "LCM = " << max;
            break;
        }
        else
            ++max;
    } while (true);
    
    return 0;
